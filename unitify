#!/usr/bin/python3
import os,sys,subprocess
def get_user_path():
    """
    Get the path of the current user's home directory.

    Returns:
    str: The path of the user's home directory.
    """
    return os.path.expanduser("~")

APPLICATION_PATH=get_user_path()+"/Downloads/ship/linux build/build.x86_64"

def file_exists(file_path):
    """
    Check if a file exists at the given file path.

    Parameters:
    file_path (str): The path to the file to check.

    Returns:
    bool: True if the file exists, False otherwise.
    """
    return os.path.isfile(file_path)

def create_service_dir():
    """
    Create a directory if it does not already exist.

    directory_path (str): The path of the directory to create.
    """
    directory_path = os.path.expanduser("~/.config/user")
    if not os.path.exists(directory_path):
        print("Folder didn't exist for user services, creating it!")
        os.makedirs(directory_path)
    else:
        print("Folder did exist!")

def execute_commands():
    # Define the sequence of commands to be executed
    commands = [
        'echo "Function for no argument called."',
        'export DISPLAY=:1',
        'export XAUTHORITY=$HOME/.Xauthority',
        'export XDG_RUNTIME_DIR=/run/user/$UID',
        'xauth add $DISPLAY . d7c11dba2b51ce5b975722e599eeda00',
        'xhost +SI:localuser:$(whoami)',
        'if ! pgrep -x "build.x86_64" > /dev/null; then echo "Unity process not found. Restarting unity..."; "/home/rbl/Downloads/ship/linux build/build.x86_64"; else echo "Unity process is running."; fi'
    ]

    # Execute each command in sequence
    for command in commands:
        subprocess.run(command, shell=True, executable='/bin/bash')

if len(sys.argv) == 1:
    execute_commands()
    #print("Ohh")
    #sys.exit(1)
elif len(sys.argv) != 2:
    print("Usage: unitify <arg>")
    sys.exit(1)
# Extract the single argument
#argument = sys.argv[1]

# Use the argument
#print("Argument provided:", argument)

#print(file_exists(APPLICATION_PATH))
#create_service_dir()


